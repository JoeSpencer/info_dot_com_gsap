[{"/Users/jspencer/Code/react-transitions-gsap/gsap-trans/src/index.js":"1","/Users/jspencer/Code/react-transitions-gsap/gsap-trans/src/reportWebVitals.js":"2","/Users/jspencer/Code/react-transitions-gsap/gsap-trans/src/App.js":"3","/Users/jspencer/Code/react-transitions-gsap/gsap-trans/src/components/Home.js":"4","/Users/jspencer/Code/react-transitions-gsap/gsap-trans/src/components/About.js":"5","/Users/jspencer/Code/react-transitions-gsap/gsap-trans/src/components/Mazda.js":"6","/Users/jspencer/Code/react-transitions-gsap/gsap-trans/src/components/Sparq.js":"7"},{"size":540,"mtime":1610378292658,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1610376172572,"results":"10","hashOfConfig":"9"},{"size":619,"mtime":1610654217181,"results":"11","hashOfConfig":"9"},{"size":9335,"mtime":1610723463397,"results":"12","hashOfConfig":"9"},{"size":4478,"mtime":1610385749447,"results":"13","hashOfConfig":"9"},{"size":10976,"mtime":1611071854555,"results":"14","hashOfConfig":"9"},{"size":11008,"mtime":1611072567331,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1419gym",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jspencer/Code/react-transitions-gsap/gsap-trans/src/index.js",[],["33","34"],"/Users/jspencer/Code/react-transitions-gsap/gsap-trans/src/reportWebVitals.js",[],"/Users/jspencer/Code/react-transitions-gsap/gsap-trans/src/App.js",[],"/Users/jspencer/Code/react-transitions-gsap/gsap-trans/src/components/Home.js",["35","36","37"],"import React from \"react\";\nimport \"../index.css\";\nimport { TimelineMax, Power1 } from \"gsap/all\";\nimport { ReactComponent as Owl } from \"../img/owl-side-view-outline.svg\";\nimport bio from \"../img/IMG_0745.jpg\";\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.timeline = new TimelineMax({ paused: true });\n  }\n\n  componentDidMount() {\n    this.timeline\n      .from(this.logo, 0.4, {\n        autoAlpha: 0,\n        y: 25,\n        ease: Power1.easeInOut,\n      })\n      .from(this.item1, 0.4, {\n        autoAlpha: 0,\n        y: 25,\n        ease: Power1.easeInOut,\n      })\n      .from(\n        this.item2,\n        0.4,\n        {\n          autoAlpha: 0,\n          y: 25,\n          ease: Power1.easeInOut,\n        },\n        \"-=.2\"\n      )\n      .from(\n        this.item3,\n        0.4,\n        {\n          autoAlpha: 0,\n          y: 25,\n          ease: Power1.easeInOut,\n        },\n        \"-=.1\"\n      )\n      .from(\n        this.item4,\n        0.4,\n        {\n          autoAlpha: 0,\n          y: 25,\n          ease: Power1.easeInOut,\n        },\n        \"-=.1\"\n      )\n      .from(\n        this.item5,\n        0.4,\n        {\n          autoAlpha: 0,\n          y: 25,\n          ease: Power1.easeInOut,\n        },\n        \"-=.1\"\n      );\n\n    this.timeline.play();\n  }\n\n  changePage = (e, destination) => {\n    e.preventDefault();\n    this.timeline.reverse();\n    const timelineDuration = this.timeline.duration() * 1000;\n    setTimeout(() => {\n      this.props.history.push(destination);\n    }, timelineDuration);\n  };\n\n  render() {\n    return (\n      <div className=\"home text-gray-600 body-font\">\n        <div className=\"container px-4 pt-8 mx-auto\">\n          <div className=\"home-container\">\n            <section className=\"relative py-2 md:py-12\">\n              <div className=\"bottom-auto top-0 left-0 right-0 w-full absolute pointer-events-none overflow-hidden -mt-20\">\n                <svg\n                  className=\"absolute bottom-0 overflow-hidden\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  preserveAspectRatio=\"none\"\n                  version=\"1.1\"\n                  viewBox=\"0 0 2560 100\"\n                  x=\"0\"\n                  y=\"0\"\n                >\n                  <polygon\n                    className=\"text-white fill-current\"\n                    points=\"2560 0 2560 100 0 100\"\n                  ></polygon>\n                </svg>\n              </div>\n              <div className=\"container mx-auto px-4\">\n                <div className=\"items-center flex flex-wrap\">\n                  <div className=\"w-full md:w-5/12 ml-auto mr-auto px-4\">\n                    <div ref={(div) => (this.logo = div)} className=\"logo\">\n                      <img\n                        alt=\"...\"\n                        className=\"max-w-full rounded-lg shadow-lg\"\n                        src={bio}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"w-full md:w-5/12 ml-auto mr-auto px-4 pt-8 md:pt-0\">\n                    <div className=\"md:pr-12\">\n                      <div ref={(div) => (this.item1 = div)} className=\"item1\">\n                        <div className=\"py-3\">\n                          <Owl />\n                        </div>\n                      </div>\n                      <div ref={(div) => (this.item2 = div)} className=\"item2\">\n                        <h3 className=\"text-3xl font-semibold\">Hello!</h3>\n                        <p className=\"mt-4 text-lg leading-relaxed text-gray-600\">\n                          Joe Spencer is a Minneapolis based experience designer\n                          and developer. He is certified in accessibility best\n                          practices and specializes in interaction, strategy,\n                          and prototyping.\n                        </p>\n                      </div>\n                      <ul className=\"list-none mt-6\">\n                        <li className=\"py-2\">\n                          <div className=\"flex items-center\">\n                            <div\n                              ref={(div) => (this.item3 = div)}\n                              className=\"item3\"\n                            >\n                              <button\n                                class=\"mt-3 text-indigo-500 inline-flex items-center\"\n                                onClick={(e) => this.changePage(e, \"/mazda\")}\n                              >\n                                Mazda Tier 3 Project\n                                <svg\n                                  fill=\"none\"\n                                  stroke=\"currentColor\"\n                                  stroke-linecap=\"round\"\n                                  stroke-linejoin=\"round\"\n                                  stroke-width=\"2\"\n                                  class=\"w-4 h-4 ml-2\"\n                                  viewBox=\"0 0 24 24\"\n                                >\n                                  <path d=\"M5 12h14M12 5l7 7-7 7\"></path>\n                                </svg>\n                              </button>\n                            </div>\n                          </div>\n                        </li>\n                        <li className=\"py-2\">\n                          <div className=\"flex items-center\">\n                            <div\n                              ref={(div) => (this.item4 = div)}\n                              className=\"item4\"\n                            >\n                              <button\n                                class=\"mt-3 text-indigo-500 inline-flex items-center\"\n                                onClick={(e) => this.changePage(e, \"/sparq\")}\n                              >\n                                Sparq App\n                                <svg\n                                  fill=\"none\"\n                                  stroke=\"currentColor\"\n                                  stroke-linecap=\"round\"\n                                  stroke-linejoin=\"round\"\n                                  stroke-width=\"2\"\n                                  class=\"w-4 h-4 ml-2\"\n                                  viewBox=\"0 0 24 24\"\n                                >\n                                  <path d=\"M5 12h14M12 5l7 7-7 7\"></path>\n                                </svg>\n                              </button>\n                            </div>\n                          </div>\n                        </li>\n                      </ul>\n                    </div>\n\n                    <div ref={(div) => (this.item5 = div)} className=\"item5\">\n                      <span class=\"inline-flex sm:ml-auto sm:mt-8 mt-24 justify-center sm:justify-start\">\n                        <a class=\"text-gray-500\">\n                          <svg\n                            fill=\"currentColor\"\n                            stroke-linecap=\"round\"\n                            stroke-linejoin=\"round\"\n                            stroke-width=\"2\"\n                            class=\"w-5 h-5\"\n                            viewBox=\"0 0 24 24\"\n                          >\n                            <path d=\"M23 3a10.9 10.9 0 01-3.14 1.53 4.48 4.48 0 00-7.86 3v1A10.66 10.66 0 013 4s-4 9 5 13a11.64 11.64 0 01-7 2c9 5 20 0 20-11.5a4.5 4.5 0 00-.08-.83A7.72 7.72 0 0023 3z\"></path>\n                          </svg>\n                        </a>\n                        <a class=\"ml-3 text-gray-500\">\n                          <svg\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                            stroke-linecap=\"round\"\n                            stroke-linejoin=\"round\"\n                            stroke-width=\"2\"\n                            class=\"w-5 h-5\"\n                            viewBox=\"0 0 24 24\"\n                          >\n                            <rect\n                              width=\"20\"\n                              height=\"20\"\n                              x=\"2\"\n                              y=\"2\"\n                              rx=\"5\"\n                              ry=\"5\"\n                            ></rect>\n                            <path d=\"M16 11.37A4 4 0 1112.63 8 4 4 0 0116 11.37zm1.5-4.87h.01\"></path>\n                          </svg>\n                        </a>\n                        <a class=\"ml-3 text-gray-500\">\n                          <svg\n                            fill=\"currentColor\"\n                            stroke=\"currentColor\"\n                            stroke-linecap=\"round\"\n                            stroke-linejoin=\"round\"\n                            stroke-width=\"0\"\n                            class=\"w-5 h-5\"\n                            viewBox=\"0 0 24 24\"\n                          >\n                            <path\n                              stroke=\"none\"\n                              d=\"M16 8a6 6 0 016 6v7h-4v-7a2 2 0 00-2-2 2 2 0 00-2 2v7h-4v-7a6 6 0 016-6zM2 9h4v12H2z\"\n                            ></path>\n                            <circle cx=\"4\" cy=\"4\" r=\"2\" stroke=\"none\"></circle>\n                          </svg>\n                        </a>\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </section>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","/Users/jspencer/Code/react-transitions-gsap/gsap-trans/src/components/About.js",[],["38","39"],"/Users/jspencer/Code/react-transitions-gsap/gsap-trans/src/components/Mazda.js",[],"/Users/jspencer/Code/react-transitions-gsap/gsap-trans/src/components/Sparq.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":185,"column":25,"nodeType":"46","endLine":185,"endColumn":50},{"ruleId":"44","severity":1,"message":"45","line":197,"column":25,"nodeType":"46","endLine":197,"endColumn":55},{"ruleId":"44","severity":1,"message":"45","line":218,"column":25,"nodeType":"46","endLine":218,"endColumn":55},{"ruleId":"40","replacedBy":"47"},{"ruleId":"42","replacedBy":"48"},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["49"],["50"],"no-global-assign","no-unsafe-negation"]